# Quick syntax check:
# python -c 'import sys, yaml; yaml.dump (yaml.load (sys.stdin), sys.stdout)' <.gitlab-ci.yml

# If things don't seem to work, this can help:
# https://gitlab.gnome.org/GNOME/NetworkManager-openvpn/-/ci/lint

stages:
  - build
  - test
  - triage

.fedora_deps: &fedora_deps
  before_script:
    - dnf -y install
      file
      findutils
      gcc
      make
      gettext-devel
      glib2-devel
      gtk3-devel
      intltool
      libtool
      libsecret-devel
      libnma-devel
      NetworkManager-libnm-devel
      pkgconfig

# Disable fetching Git, run after the tarball is rolled
.dist: &dist
  stage: test
  dependencies:
    - fedora_dist
  variables:
    GIT_STRATEGY: none

# Roll the distribution tarball
fedora_dist:
  <<: *fedora_deps
  image: fedora:36
  stage: build
  script:
    - dnf -y install
      /usr/bin/autopoint
      autoconf automake make
      NetworkManager-libnm-devel
    - sh autogen.sh
    - make -j distcheck
  artifacts:
    paths:
      - "*.xz"

# This one has libnm-glib
fedora28_from_dist:
  <<: *dist
  <<: *fedora_deps
  script:
    - tar xJf NetworkManager-openvpn-*.tar.xz
    - cd NetworkManager-openvpn-*/
    - dnf -y install
      NetworkManager-devel
      NetworkManager-glib-devel
      libnm-gtk-devel
    - ./configure
      --disable-silent-rules
      --with-libnm-glib
    - make -j
    - make -j check
    - make -j install
    - make -j uninstall
  image: fedora:28

# A regular build on recent Fedora
fedora_from_dist:
  <<: *dist
  <<: *fedora_deps
  script:
    - tar xJf NetworkManager-openvpn-*.tar.xz
    - cd NetworkManager-openvpn-*/
    - ./configure
      --disable-silent-rules
    - make -j
    - make -j check
    - make -j install
    - make -j uninstall
  image: fedora:latest

triage:issues:
  stage: triage
  image: ruby:2.7
  script:
    - gem install gitlab-triage
    - gitlab-triage -d --token $API_TOKEN --source-id $SOURCE_ID
  only:
    - schedules
